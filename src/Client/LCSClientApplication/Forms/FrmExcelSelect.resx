<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>